version: '3.9'
services:
  file_service:
    build:
      context: ./file_service
    container_name: file-service
    ports:
      - "8001:8001"
    volumes:
      - ./file_service/storage:/app/storage
    depends_on:
      - parser_service
      - auth_service
    environment:
      - PARSER_HOST=parser_service
      - PARSER_PORT=50051
    restart: unless-stopped
    networks:
      - docstream-net

  parser_service:
    build:
      context: ./parser_service
    container_name: parser-service
    ports:
      - "50051:50051"
    volumes:
      - ./parser_service:/app
    restart: unless-stopped
    networks:
      - docstream-net

  processing_service:
    build:
      context: processing_service
    container_name: processing-service
    ports:
      - "8003:8003"    #HTTP
      - "50052:50052"  #gRPC
    restart: unless-stopped
    networks:
      - docstream-net

  worker_service:
    build:
      context: ./worker_service
    container_name: worker-service
    depends_on:
      - rabbitmq
      - processing_service
    restart: unless-stopped
    networks:
      - docstream-net
        
  auth_service:
    build:
      context: ./auth_service
    container_name: auth-service
    ports:
      - "8005:8005"
    restart: unless-stopped
    networks:
      - docstream-net


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    restart: unless-stopped
    networks:
      - docstream-net

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC (traces + metrics)
      - "4318:4318"   # OTLP HTTP (optional)
      - "8889:8889"   # Prometheus scrape endpoint
    restart: unless-stopped
    networks:
      - docstream-net

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"   # Jaeger UI
    restart: unless-stopped
    networks:
      - docstream-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - docstream-net
  kong:
    image: kong:3.6
    container_name: kong
    restart: unless-stopped
    depends_on:
      - auth_service   # Auth Service must start first for OIDC discovery
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_LOG_LEVEL: info
      KONG_NGINX_WORKER_PROCESSES: 1
    volumes:
      - ./kong/kong.yml:/usr/local/kong/kong.yml:ro
    ports:
      - "8000:8000"   # Public proxy port (for clients)
      - "8001:8001"   # Admin API
    networks:
      - docstream-net

networks:
  docstream-net:
    driver: bridge


